name: Django CI with SonarQube

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  pull-requests: read

jobs:
  build:
    environment: Sonar
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}

      - name: Run tests with coverage
        run: |
          coverage run --source='.' manage.py test
          coverage xml
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}

      - name: Check SONAR_TOKEN availability
        run: |
          if [ -z "$SONAR_TOKEN" ]; then
            echo "ERROR: SONAR_TOKEN is NOT set"
            exit 1
          else
            echo "SONAR_TOKEN is set"
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Download SonarScanner CLI
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner-cli-4.8.0.2856-linux.zip
          rm sonar-scanner-cli-4.8.0.2856-linux.zip

      - name: Check Java version
        run: java -version
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.15-6/x64
          PATH: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.15-6/x64/bin:${{ env.PATH }}

      - name: Run SonarScanner with debug logs
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.15-6/x64
          PATH: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.15-6/x64/bin:${{ env.PATH }}
        run: |
          ./sonar-scanner-4.8.0.2856-linux/bin/sonar-scanner \
            -Dsonar.projectKey=caderneta-virtual-backend \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://labens.dct.ufrn.br/sonarqube \
            -Dsonar.login=$SONAR_TOKEN \
            -X
